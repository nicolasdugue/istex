package model.featureselection;

import java.util.ArrayList;

/**
 * Allows to store the feature considered as labels for each cluster
 * 
 * @author dugue
 *
 */
public class LabelSelection {
	/**
	 * Pour chaque cluster, on a une liste de labels Ainsi labels.get(i)
	 * retourne une ArrayList d'entier correspondant au numéro de colonnes des
	 * features sélectionnées comme label pour le cluster i.
	 */
	private ArrayList<ArrayList<Integer>> labels = new ArrayList<ArrayList<Integer>>();
	
	public LabelSelection(FeaturesSelection fs) {
		// POur chaque cluster, on prépare une liste de labels qui, au départ,
		// est vide
		for (int i = 0; i < fs.getNbCluster(); i++) {
			labels.add(new ArrayList<Integer>());
		}
		float valueMax;
		int clusterWithValueMax;
		for (int j = 0; j < fs.getNbColumns(); j++) {
			valueMax=-1;
			for (int k = 0; k < fs.getNbCluster(); k++) {
				if (fs.getFeatureFMeasure(j, k) > valueMax) {
					valueMax =fs.getFeatureFMeasure(j, k);
					clusterWithValueMax=k;
				}
			}
		}
	}

}
