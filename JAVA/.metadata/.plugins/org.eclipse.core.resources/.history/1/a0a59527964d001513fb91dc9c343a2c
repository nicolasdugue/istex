package model.diachronism;

import java.util.ArrayList;

import model.featureselection.LabelSelection;

/**
 * 
 * Allows to compare two clustering by comparing their label
 * 
 * @author dugue
 *
 */
public class LabelDiachronism {
	/**
	 * Both the set of labels of each cluster for each clustering made at time t0 and at time t1
	 */
	private LabelSelection ls_s;
	private LabelSelection ls_t1;
	
	private float[][] p_t_acts;
	
	private float[] pA_s;
	
	private float a_s;

	public LabelDiachronism(LabelSelection ls_t0, LabelSelection ls_t1) {
		this.ls_s = ls_t0;
		this.ls_t1 = ls_t1;
		
	}
	private void computeP_t_acts() {
		int env;
		float p_t_acts_sum;
		ArrayList<String> labels_s;
		ArrayList<String> labels_t;
		ArrayList<String> labels_s_and_t;
		float numerateur;
		float denominateur;
		for (int s=0; s < ls_s.getNbCluster(); s++) {
			for (int t=0; t < ls_t1.getNbCluster(); t++) {
				numerateur=0;
				denominateur=0;
				labels_s=ls_s.getLabelSet(t);
				labels_t=ls_t1.getLabelSet(t);
				labels_s_and_t=intersection(labels_s, labels_t);
				for (String label : labels_s_and_t) {
				}
			}
		}
	}
	private <T> ArrayList<T> intersection(ArrayList<T> al1, ArrayList<T> al2) {
		ArrayList<T> intersection = new ArrayList<T>();
		for (T label : al1) {
			if (al2.contains(al1)) {
				intersection.add(label);
			}
		}
		return intersection;
	}
	
	
}
