package model.matrix;

import java.util.ArrayList;
import java.util.Iterator;

import io.reader.MatrixReader;
import model.PairI;
import model.cluster.Clustering;

public class CsrMatrixClustered extends CsrMatrix {

	private Clustering clusters;
	
	
	public CsrMatrixClustered() {
		super();
		// TODO Auto-generated constructor stub
	}

	public CsrMatrixClustered(MatrixReader mr) {
		super(mr);
		// TODO Auto-generated constructor stub
	}
	

	public int getNbCluster() {
		return clusters.size();
	}

	/**
	 * @param i the column you need to get the sum
	 * @param k the cluster the rows have to belong to
	 * @return sum over the i-th column of the matrix for each objet that belongs to cluster k
	 */
	public int getSumColInCluster(int i, int k) {
		ArrayList< PairI > rows_or_col;
		rows_or_col=this.columns;
		
		int start;
		int end;
		if (i == 0) {
			start=0;
		}
		else {
			start=this.cumulative_columns.get(i-1);
		}
		end =this.cumulative_columns.get(i);
		int sum=0;
		for (int j=start; j < end; j++) {
			if (clusters.getClusterOfObjectI(this.columns.get(j).getLeft()) == k)
				sum +=rows_or_col.get(j).getRight();
		}
		return sum;
	}

	/**
	 * @param k the cluster you want to get the whole sum
	 * @return the sum over all the a_ij that belongs to the cluster
	 */
	public int getSumCluster(int k) {
		ArrayList<Integer> row_lists=clusters.getObjectsInCk(k);
		Iterator<Integer> it = row_lists.iterator();
		int sum=0;
		while (it.hasNext()) {
			sum+=getSumRow(it.next());
		}
		return sum;
	}
	

}
